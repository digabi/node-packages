name: 'Publish new version'

on:
  workflow_dispatch:
    inputs:
      package:
        type: choice
        description: Package
        options:
          - '@digabi/validation'
          - '@digabi/fetch'
          - '@digabi/logger'
      bump:
        type: choice
        description: Version bump
        options:
          - major
          - minor
          - patch
          - premajor
          - preminor
          - prepatch
          - prerelease

run-name: 'Publish new ${{ inputs.bump }} version of package ${{ inputs.package }}'

jobs:
  publish:
    name: Publish new version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_PUBLISH_TOKEN }}" > $PWD/.npmrc
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
      - run: npm ci
      - run: npm run lint --workspace= ${{ inputs.package }} lint
      - run: npm run lint --workspace= ${{ inputs.package }} test
      - run: npm run lint --workspace= ${{ inputs.package }} build
      - name: Publish to npm
        run: |
          TAG=latest

          if [[ "${{ inputs.bump }}" == *pre* ]]; then
            branchName="${{ github.ref_name }}"
            TAG=${branchName//\//-}
          fi

          git config --global user.email "ci@ylioppilastutkinto.fi"
          git config --global user.name "Github CI"

          # npm version command should automatically do tag and commit but there is a feature that in workspaces it doesnt.
          npm version ${{ inputs.bump }} --preid="$TAG" --workspace=${{ inputs.package }}

          # get new version
          VERSION=$(npm version --json --workspace=${{ inputs.package }} | jq -r '."${{ inputs.package }}"')
          GIT_TAG_NAME=${{ inputs.package }}@$VERSION

          # create release commit
          git add **/package.json package-lock.json
          git commit -m "CI: ${{ inputs.bump }} release ($TAG): $GIT_TAG_NAME"

          # create tag
          git tag -a $GIT_TAG_NAME -m $GIT_TAG_NAME

          git push --follow-tags
          npm publish --workspace=${{ inputs.package }} --tag=$TAG
